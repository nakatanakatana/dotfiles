# ==========================================================
# util
# ==========================================================
[[plugins]]
repo = 'tyru/caw.vim'
on_map = '<Plug>(caw:'
hook_add = '''
nmap <Leader>c <Plug>(caw:hatpos:toggle)
vmap <Leader>c <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'vim-scripts/vim-auto-save'
on_event = 'InsertEnter'
hook_add = '''
let g:auto_save = 1
let g:auto_save_in_insert_mode = 0
let g:auto_save_silent = 1
'''

[[plugins]]
repo = 'rrethy/vim-hexokinase'
build = 'make hexokinase'
on_cmd = 'HexokinaseToggle'
hook_add = '''
" let g:Hexokinase_highlighters = ['sign_column']
let g:Hexokinase_highlighters = ['backgroundfull']
'''

[[plugins]]
repo = 'kana/vim-submode'
on_func = 'submode#'
hook_add = '''
" undo/redo
call submode#enter_with('undo/redo', 'n', '', 'g-', 'g-')
call submode#enter_with('undo/redo', 'n', '', 'g+', 'g+')
call submode#enter_with('undo/redo', 'n', '', 'g=', 'g+')
call submode#leave_with('undo/redo', 'n', '', '<Esc>')
call submode#map('undo/redo', 'n', '', '-', 'g-')
call submode#map('undo/redo', 'n', '', '+', 'g+')
call submode#map('undo/redo', 'n', '', '=', 'g+')
" splitsize
call submode#enter_with('bufmove', 'n', '', '<Leader>w>', '<C-w>>')
call submode#enter_with('bufmove', 'n', '', '<Leader>w.', '<C-w>>')
call submode#enter_with('bufmove', 'n', '', '<Leader>w<', '<C-w><')
call submode#enter_with('bufmove', 'n', '', '<Leader>w,', '<C-w><')
call submode#enter_with('bufmove', 'n', '', '<Leader>w+', '<C-w>+')
call submode#enter_with('bufmove', 'n', '', '<Leader>w=', '<C-w>+')
call submode#enter_with('bufmove', 'n', '', '<Leader>w-', '<C-w>-')
call submode#enter_with('bufmove', 'n', '', '<Leader>w0', '<C-w>=')
call submode#leave_with('bufmove', 'n', '', '<Esc>')
call submode#map('bufmove', 'n', '', '>', '<C-w>>')
call submode#map('bufmove', 'n', '', '.', '<C-w>>')
call submode#map('bufmove', 'n', '', '<', '<C-w><')
call submode#map('bufmove', 'n', '', ',', '<C-w><')
call submode#map('bufmove', 'n', '', '+', '<C-w>+')
call submode#map('bufmove', 'n', '', '=', '<C-w>+')
call submode#map('bufmove', 'n', '', '-', '<C-w>-')
call submode#map('bufmove', 'n', '', '0', '<C-w>=')
" splitselect
call submode#enter_with('splitselect', 'n', '', '<Leader>wh', '<C-w>h')
call submode#enter_with('splitselect', 'n', '', '<Leader>wj', '<C-w>j')
call submode#enter_with('splitselect', 'n', '', '<Leader>wk', '<C-w>k')
call submode#enter_with('splitselect', 'n', '', '<Leader>wl', '<C-w>l')
call submode#leave_with('splitselect', 'n', '', '<Esc>')
call submode#map('splitselect', 'n', '', 'h', '<C-w>h')
call submode#map('splitselect', 'n', '', 'j', '<C-w>j')
call submode#map('splitselect', 'n', '', 'k', '<C-w>k')
call submode#map('splitselect', 'n', '', 'l', '<C-w>l')
'''


# ==========================================================
# lang
# ==========================================================
[[plugins]]
repo = 'osyo-manga/vim-precious'
on_ft = 'toml'

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

# [[plugins]]
# repo = 'ruanyl/coverage.vim'
# on_ft = ['typescript', 'typescriptreact','vue']
# hook_add = '''
# let g:coverage_json_report_path = 'coverage/coverage-final.json'
# let g:coverage_show_covered = 0
# let g:coverage_sign_covered = 'o'
# let g:coverage_show_uncovered = 1
# let g:coverage_sign_uncovered = 'x'
# let g:coverage_sign_column_always = 0
# '''

[[plugins]]
repo = 'yardnsm/vim-import-cost'
build = 'npm install'
on_ft = ['typescript', 'typescriptreact', 'vue']
hook_add = '''
let g:import_cost_always_open_split = 0
if has('nvim')
  let g:import_cost_split_pos = 'right'
  augroup import_cost_auto_run
    autocmd!
    autocmd InsertLeave *.js,*.jsx,*.ts,*.tsx ImportCost
  augroup END
endif
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['vue', 'html']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = 'vue'

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
on_ft = 'typescriptreact'

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'
on_ft = ['typescript', 'svelte', 'vue']

[[plugins]]
repo = 'leafOfTree/vim-svelte-plugin'
on_ft = 'svelte'
depends = ['yats.vim']
hook_add = '''
let g:vim_svelte_plugin_use_typescript = 1
'''

[[plugins]]
repo = 'mattn/vim-goimports'
on_ft = 'go'

[[plugins]]
repo = 'kyoh86/vim-go-coverage'
on_ft = 'go'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'

[[plugins]]
repo = 'jjo/vim-cue'
on_ft = 'cue'


# ==========================================================
# fileformat
# ==========================================================

# [[plugins]]
# repo = 'cespare/vim-toml'
# on_ft = 'toml'
