[[plugins]]
repo = 'Shougo/dein.vim'

# ==========================================================
# color
# ==========================================================

[[plugins]]
repo = 'altercation/vim-colors-solarized'
hook_add = '''
syntax enable
set background=dark
au MyAutoCmd VimEnter * nested colorscheme solarized
'''

# ==========================================================
# powerline
# ==========================================================

[[plugins]]
repo = 'majutsushi/tagbar'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
nnoremap <Leader>gs :<C-u>Gstatus<CR>
nnoremap <Leader>gw :<C-u>Gwrite<CR>
nnoremap <Leader>gd :<C-u>Gdiff<CR>
nnoremap <Leader>gb :<C-u>Gblame<CR>
nnoremap <Leader>gl :<C-u>0Glog<CR>
nnoremap <Leader>gc :<C-u>Gcommit<CR>

set diffopt+=vertical
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['tagbar', 'vim-fugitive']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = 'vim-airline'
hook_add = '''
let g:airline_theme='solarized'
let g:airline_solarized_bg='dark'
'''

[[plugins]]
repo = 'gcmt/taboo.vim'
depends = 'vim-airline'
hook_add = '''
"set guioptions-=e
"set sessionoptions+=tabpages,globals
let g:taboo_tab_format=' %N %f%m %w '
'''

# ==========================================================
# edit
# ==========================================================

[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
nmap <Leader>c <Plug>(caw:hatpos:toggle)
vmap <Leader>c <Plug>(caw:hatpos:toggle)
'''

# ==========================================================
# terminal
# ==========================================================

[[plugins]]
repo = 'tpope/vim-dispatch'


# ==========================================================
# linter
# ==========================================================

# ==========================================================
# lsp
# ==========================================================

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
source ~/.config/nvim/plugins/vim-lsp.vim
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
let g:asyncomplete_log_file = expand('~/asyncomplete.log')

let g:asyncomplete_auto_popup = 1
let g:asyncomplete_smart_completion = 1
let g:asyncomplete_remove_duplicates = 1

imap <c-space> <Plug>(asyncomplete_force_refresh)
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<cr>"
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'


# ==========================================================
# lang
# ==========================================================
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_sign_column_always = 1
let g:ale_virtualtext_cursor = 1

nmap <silent> <leader>p <Plug>(ale_previous)
nmap <silent> <leader>n <Plug>(ale_next)
nmap <silent> <leader>a <Plug>(ale_toggle)
'''

[[plugins]]
repo = 'janko-m/vim-test'
hook_add = '''
let g:test#strategy = 'dispatch'

nnoremap <Leader>t5 :TestFile<CR>
nnoremap <Leader>t4 :TestSuite<CR>
nnoremap <Leader>t3 :TestNearest<CR>
nnoremap <Leader>t2 :TestLast<CR>
'''


# ==========================================================
# util
# ==========================================================
[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
source ~/.config/nvim/plugins/denite.vim
'''

# [[plugins]]
# repo = 'nixprime/cpsm'
# build = 'env PY3=ON ./install.sh'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
vmap <Enter> <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
autocmd VimEnter * execute 'NERDTree'
let g:NERDTreeShowBookmarks=1

nnoremap <Leader><Leader> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
hook_add = '''
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ "Unknown"   : "?"
    \ }
'''

[[plugins]]
repo = 'terryma/vim-expand-region'
hook_add = '''
vmap v <Plug>(expand_region_expand)
vmap V <Plug>(expand_region_shrink)
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
nnoremap <Leader>g<BS> :GitGutterLineHighlightsToggle<CR>
'''

[[plugins]]
repo = 'vim-scripts/vim-auto-save'
hook_add = '''
let g:auto_save = 1
let g:auto_save_in_insert_mode = 0
let g:auto_save_silent = 1
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'junegunn/fzf'
hook_add = '''
nnoremap <Leader>b :<C-u>Buffers<CR>
nnoremap <Leader>f :<C-u>Ag<CR>
nnoremap <C-p> :<C-u>GFiles<CR>
'''

[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
" undo/redo
call submode#enter_with('undo/redo', 'n', '', 'g-', 'g-')
call submode#enter_with('undo/redo', 'n', '', 'g+', 'g+')
call submode#enter_with('undo/redo', 'n', '', 'g=', 'g+')
call submode#leave_with('undo/redo', 'n', '', '<Esc>')
call submode#map('undo/redo', 'n', '', '-', 'g-')
call submode#map('undo/redo', 'n', '', '+', 'g+')
call submode#map('undo/redo', 'n', '', '=', 'g+')
" splitsize
call submode#enter_with('bufmove', 'n', '', '<C-w>>', '<C-w>>')
call submode#enter_with('bufmove', 'n', '', '<C-w>.', '<C-w>>')
call submode#enter_with('bufmove', 'n', '', '<C-w><', '<C-w><')
call submode#enter_with('bufmove', 'n', '', '<C-w>,', '<C-w><')
call submode#enter_with('bufmove', 'n', '', '<C-w>+', '<C-w>+')
call submode#enter_with('bufmove', 'n', '', '<C-w>=', '<C-w>+')
call submode#enter_with('bufmove', 'n', '', '<C-w>-', '<C-w>-')
call submode#enter_with('bufmove', 'n', '', '<C-w>0', '<C-w>=')
call submode#leave_with('bufmove', 'n', '', '<Esc>')
call submode#map('bufmove', 'n', '', '>', '<C-w>>')
call submode#map('bufmove', 'n', '', '.', '<C-w>>')
call submode#map('bufmove', 'n', '', '<', '<C-w><')
call submode#map('bufmove', 'n', '', ',', '<C-w><')
call submode#map('bufmove', 'n', '', '+', '<C-w>+')
call submode#map('bufmove', 'n', '', '=', '<C-w>+')
call submode#map('bufmove', 'n', '', '-', '<C-w>-')
call submode#map('bufmove', 'n', '', '0', '<C-w>=')
" splitselect
call submode#enter_with('splitselect', 'n', '', '<C-w>h', '<C-w>h')
call submode#enter_with('splitselect', 'n', '', '<C-w>j', '<C-w>j')
call submode#enter_with('splitselect', 'n', '', '<C-w>k', '<C-w>k')
call submode#enter_with('splitselect', 'n', '', '<C-w>l', '<C-w>l')
call submode#map('splitselect', 'n', '', 'h', '<C-w>h')
call submode#map('splitselect', 'n', '', 'j', '<C-w>j')
call submode#map('splitselect', 'n', '', 'k', '<C-w>k')
call submode#map('splitselect', 'n', '', 'l', '<C-w>l')
'''
